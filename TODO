Lots of examples: http://git-scm.com/docs
Recap:
	- Option: flags/values, short/long names.
			-s, --long
	- Argument: individual names.
			login, install, build

- Add commands. A command is formed by an argument followed by options and
	arguments.
		git push origin master -f
	The "command()" function configures a command. Each command it's like a new
	fresh cli program, with --help, --usage and --version messages.
	
		npm config set <key> <value>
		npm config get [<key>]
		npm config list
		npm install [<pkg>...]
		npm tag <project>@<version> [<tag>]
		
		require ("argp")
				.main ()
						.on ("start|end|argument|option")
						.description ()
						.email ()
						.body ()
								.option ({ short: "l" })
								.help ()
								.version ()
								.end ()
				.command ("config")
						.on ("start|end|argument|option")
						.description ()
						.usages([])
						.body ()
								.argument ("set", { trailing: { eq: 2 } })
								.argument ("get", { trailing: { max: 1 } })
								.argument ("list")
								.end ()
				.command ("install", { trailing: { max: Infinity } })
						.on ("start|end|argument|option")
						.description ()
						.usages([])
						.body ()
								.option ({ short: "g", long: "global" })
								.end ()
				.command ("tag", { trailing: { min: 1, max: 2 } })
						.on ("start|end|argument|option")
						.description ()
						.usages([])
				.argv ();
	
	Output examples:
	
	$ npm config set foo bar
	
	{
		config: [],
		set: ["foo", "bar"]
	}
	
	$ npm config get
	
	{
		config: [],
		get: []
	}
	
	$ npm config get foo
	
	{
		config: [],
		get: ["foo"]
	}
	
	$ npm install foo bar -g
	
	{
		install: ["foo", "bar"],
		global: true
	}
	
	This can be also parsed:
	
	$ node script.js foo x 1 2 y 3
	
	.command ("foo")
			.body ()
					.argument ("x", { trailing: { eq: 2 } })
					.argument ("y", { trailing: { eq: 1 } })
					.end ()
	
	{
		foo: [],
		x: [1, 2],
		y: [3]
	}